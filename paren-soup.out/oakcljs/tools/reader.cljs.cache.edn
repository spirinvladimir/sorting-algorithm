{:rename-macros {}, :renames {}, :externs {parseInt {}, isNaN {}, Error {}, String {fromCharCode {}}, Object {}, Number {NaN {}, NEGATIVE_INFINITY {}, POSITIVE_INFINITY {}}, Boolean {}, RegExp {}}, :use-macros {log-source oakcljs.tools.reader.reader-types}, :excludes #{char *suppress-read* *default-data-reader-fn* read default-data-readers *data-readers* read-line read-string}, :name oakcljs.tools.reader, :imports {StringBuffer goog.string.StringBuffer}, :requires {oakcljs.tools.reader.impl.utils oakcljs.tools.reader.impl.utils, gstring goog.string, goog.string goog.string, garray goog.array, StringBuffer goog.string.StringBuffer, string clojure.string, oakcljs.tools.reader.reader-types oakcljs.tools.reader.reader-types, oakcljs.tools.reader.impl.commons oakcljs.tools.reader.impl.commons, clojure.string clojure.string, goog.array goog.array}, :cljs.spec/speced-vars [], :uses {match-number oakcljs.tools.reader.impl.commons, reader-conditional oakcljs.tools.reader.impl.utils, whitespace? oakcljs.tools.reader.impl.utils, read-comment oakcljs.tools.reader.impl.commons, char oakcljs.tools.reader.impl.utils, numeric? oakcljs.tools.reader.impl.utils, reader-error oakcljs.tools.reader.reader-types, ReaderConditional oakcljs.tools.reader.impl.utils, unread oakcljs.tools.reader.reader-types, peek-char oakcljs.tools.reader.reader-types, parse-symbol oakcljs.tools.reader.impl.commons, second' oakcljs.tools.reader.impl.utils, desugar-meta oakcljs.tools.reader.impl.utils, next-id oakcljs.tools.reader.impl.utils, number-literal? oakcljs.tools.reader.impl.commons, read-past oakcljs.tools.reader.impl.commons, indexing-reader? oakcljs.tools.reader.reader-types, read-char oakcljs.tools.reader.reader-types, get-column-number oakcljs.tools.reader.reader-types, ex-info? oakcljs.tools.reader.impl.utils, get-file-name oakcljs.tools.reader.reader-types, reader-conditional? oakcljs.tools.reader.impl.utils, throwing-reader oakcljs.tools.reader.impl.commons, string-push-back-reader oakcljs.tools.reader.reader-types, namespace-keys oakcljs.tools.reader.impl.utils, get-line-number oakcljs.tools.reader.reader-types}, :defs {NO_MATCH {:name oakcljs.tools.reader/NO_MATCH, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 516, :column 1, :end-line 516, :end-column 28, :private true, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 516, :column 20, :end-line 516, :end-column 28, :private true}, :tag object}, READ_EOF {:name oakcljs.tools.reader/READ_EOF, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 202, :column 1, :end-line 202, :end-column 28, :private true, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 202, :column 20, :end-line 202, :end-column 28, :private true}, :tag object}, unquote-splicing? {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 666, :column 8, :end-line 666, :end-column 25, :private true, :arglists (quote ([form]))}, :private true, :name oakcljs.tools.reader/unquote-splicing?, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 25, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 666, :end-line 666, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, duplicate-keys-error {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 281, :column 8, :end-line 281, :end-column 28, :private true, :arglists (quote ([msg coll]))}, :private true, :name oakcljs.tools.reader/duplicate-keys-error, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 28, :method-params ([msg coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 281, :end-line 281, :max-fixed-arity 2, :fn-var true, :arglists (quote ([msg coll]))}, read-tagged {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 856, :column 8, :end-line 856, :end-column 19, :private true, :arglists (quote ([rdr initch opts pending-forms]))}, :private true, :name oakcljs.tools.reader/read-tagged, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 19, :method-params ([rdr initch opts pending-forms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 856, :end-line 856, :max-fixed-arity 4, :fn-var true, :arglists (quote ([rdr initch opts pending-forms]))}, starting-line-col-info {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 194, :column 8, :end-line 194, :end-column 30, :private true, :arglists (quote ([rdr]))}, :private true, :name oakcljs.tools.reader/starting-line-col-info, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 30, :method-params ([rdr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 194, :end-line 194, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rdr]))}, wrapping-reader {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 428, :column 8, :end-line 428, :end-column 23, :private true, :arglists (quote ([sym])), :doc "Returns a function which wraps a reader in a call to sym"}, :private true, :name oakcljs.tools.reader/wrapping-reader, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 23, :method-params ([sym]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 428, :end-line 428, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sym])), :doc "Returns a function which wraps a reader in a call to sym"}, read-meta {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 434, :column 8, :end-line 434, :end-column 17, :private true, :arglists (quote ([rdr _ opts pending-forms])), :doc "Read metadata and return the following object with the metadata applied"}, :private true, :name oakcljs.tools.reader/read-meta, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 17, :method-params ([rdr _ opts pending-forms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 434, :end-line 434, :max-fixed-arity 4, :fn-var true, :arglists (quote ([rdr _ opts pending-forms])), :doc "Read metadata and return the following object with the metadata applied"}, read-unicode-char {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 108, :column 8, :end-line 108, :end-column 25, :private true, :arglists (quote ([token offset length base] [rdr initch base length exact?])), :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([token offset length base] [rdr initch base length exact?]), :arglists ([token offset length base] [rdr initch base length exact?]), :arglists-meta (nil nil)}}, :private true, :name oakcljs.tools.reader/read-unicode-char, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 25, :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([token offset length base] [rdr initch base length exact?]), :arglists ([token offset length base] [rdr initch base length exact?]), :arglists-meta (nil nil)}, :method-params ([token offset length base] [rdr initch base length exact?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 5, :fn-var true, :arglists ([token offset length base] [rdr initch base length exact?])}, char-code {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 102, :column 8, :end-line 102, :end-column 17, :private true, :arglists (quote ([ch base]))}, :private true, :name oakcljs.tools.reader/char-code, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 17, :method-params ([ch base]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ch base]))}, read-unmatched-delimiter {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 77, :column 8, :end-line 77, :end-column 32, :private true, :arglists (quote ([rdr ch opts pending-forms]))}, :private true, :name oakcljs.tools.reader/read-unmatched-delimiter, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 32, :method-params ([rdr ch opts pending-forms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 4, :fn-var true, :arglists (quote ([rdr ch opts pending-forms]))}, read-fn {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 597, :column 8, :end-line 597, :end-column 15, :private true, :arglists (quote ([rdr _ opts pending-forms]))}, :private true, :name oakcljs.tools.reader/read-fn, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 15, :method-params ([rdr _ opts pending-forms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 597, :end-line 597, :max-fixed-arity 4, :fn-var true, :arglists (quote ([rdr _ opts pending-forms]))}, wrap-value-and-add-metadata {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 228, :column 8, :end-line 228, :end-column 35, :private true, :arglists (quote ([f rdr & args])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(f rdr args)], :arglists ([f rdr & args]), :arglists-meta (nil)}}, :private true, :name oakcljs.tools.reader/wrap-value-and-add-metadata, :variadic true, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 35, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(f rdr args)], :arglists ([f rdr & args]), :arglists-meta (nil)}, :method-params [(f rdr args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 228, :end-line 228, :max-fixed-arity 2, :fn-var true, :arglists ([f rdr & args])}, syntax-quote* {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 742, :column 8, :end-line 742, :end-column 21, :private true, :arglists (quote ([form]))}, :private true, :name oakcljs.tools.reader/syntax-quote*, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 21, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 742, :end-line 742, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, bool? {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 731, :column 7, :end-line 731, :end-column 12, :arglists (quote ([x]))}, :name oakcljs.tools.reader/bool?, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 731, :end-line 731, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, arg-env {:meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 589, :column 26, :end-line 589, :end-column 33, :dynamic true, :private true}, :private true, :name oakcljs.tools.reader/arg-env, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 33, :column 1, :dynamic true, :line 589, :end-line 589, :tag clj-nil}, read-suppress {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 507, :column 8, :end-line 507, :end-column 21, :private true, :arglists (quote ([first-line rdr opts pending-forms])), :doc "Read next form and suppress. Return nil or READ_FINISHED."}, :private true, :name oakcljs.tools.reader/read-suppress, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 21, :method-params ([first-line rdr opts pending-forms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 507, :end-line 507, :max-fixed-arity 4, :fn-var true, :arglists (quote ([first-line rdr opts pending-forms])), :doc "Read next form and suppress. Return nil or READ_FINISHED."}, *suppress-read* {:name oakcljs.tools.reader/*suppress-read*, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 887, :column 1, :end-line 887, :end-column 31, :dynamic true, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 887, :column 16, :end-line 887, :end-column 31, :dynamic true}, :tag boolean}, flatten-map {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 688, :column 8, :end-line 688, :end-column 19, :private true, :arglists (quote ([form])), :doc "Flatten a map into a seq of alternate keys and values"}, :private true, :name oakcljs.tools.reader/flatten-map, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 19, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 688, :end-line 688, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form])), :doc "Flatten a map into a seq of alternate keys and values"}, *default-data-reader-fn* {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 880, :column 16, :end-line 880, :end-column 40, :dynamic true}, :name oakcljs.tools.reader/*default-data-reader-fn*, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 40, :method-params ([tag value]), :protocol-impl nil, :arglists-meta (), :column 1, :dynamic true, :line 880, :end-line 880, :max-fixed-arity 2, :fn-var true, :arglists nil, :doc "When no data reader is found for a tag and *default-data-reader-fn*\n  is non-nil, it will be called with two arguments, the tag and the value.\n  If *default-data-reader-fn* is nil (the default value), an exception\n  will be thrown for the unknown tag."}, read {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 943, :column 7, :end-line 943, :end-column 11, :arglists (quote ([] [reader] [opts reader] [reader eof-error? eof-value])), :doc "Reads the first object from an IPushbackReader or a java.io.PushbackReader.\n   Returns the object read. If EOF, throws if eof-error? is true.\n   Otherwise returns sentinel. If no stream is providen, *in* will be used.\n\n   Opts is a persistent map with valid keys:\n    :read-cond - :allow to process reader conditionals, or\n                 :preserve to keep all branches\n    :features - persistent set of feature keywords for reader conditionals\n    :eof - on eof, return value unless :eofthrow, then throw.\n           if not specified, will throw\n\n   To read data structures only, use oakclojure.tools.reader.edn/read\n\n   Note that the function signature of oakclojure.tools.reader/read and\n   oakclojure.tools.reader.edn/read is not the same for eof-handling", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([reader] [{eof :eof, :as opts, :or {eof :eofthrow}} reader] [reader eof-error? sentinel]), :arglists ([reader] [{eof :eof, :as opts, :or {eof :eofthrow}} reader] [reader eof-error? sentinel]), :arglists-meta (nil nil nil)}}, :name oakcljs.tools.reader/read, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([reader] [{eof :eof, :as opts, :or {eof :eofthrow}} reader] [reader eof-error? sentinel]), :arglists ([reader] [{eof :eof, :as opts, :or {eof :eofthrow}} reader] [reader eof-error? sentinel]), :arglists-meta (nil nil nil)}, :method-params ([reader] [{eof :eof, :as opts, :or {eof :eofthrow}} reader] [reader eof-error? sentinel]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 943, :end-line 943, :max-fixed-arity 3, :fn-var true, :arglists ([reader] [{eof :eof, :as opts, :or {eof :eofthrow}} reader] [reader eof-error? sentinel]), :doc "Reads the first object from an IPushbackReader or a java.io.PushbackReader.\n   Returns the object read. If EOF, throws if eof-error? is true.\n   Otherwise returns sentinel. If no stream is providen, *in* will be used.\n\n   Opts is a persistent map with valid keys:\n    :read-cond - :allow to process reader conditionals, or\n                 :preserve to keep all branches\n    :features - persistent set of feature keywords for reader conditionals\n    :eof - on eof, return value unless :eofthrow, then throw.\n           if not specified, will throw\n\n   To read data structures only, use oakclojure.tools.reader.edn/read\n\n   Note that the function signature of oakclojure.tools.reader/read and\n   oakclojure.tools.reader.edn/read is not the same for eof-handling"}, read-set {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 453, :column 8, :end-line 453, :end-column 16, :private true, :arglists (quote ([rdr _ opts pending-forms]))}, :private true, :name oakcljs.tools.reader/read-set, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 16, :method-params ([rdr _ opts pending-forms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 453, :end-line 453, :max-fixed-arity 4, :fn-var true, :arglists (quote ([rdr _ opts pending-forms]))}, read-symbol {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 373, :column 8, :end-line 373, :end-column 19, :private true, :arglists (quote ([rdr initch]))}, :private true, :name oakcljs.tools.reader/read-symbol, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 19, :method-params ([rdr initch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 373, :end-line 373, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rdr initch]))}, read-unquote {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 657, :column 8, :end-line 657, :end-column 20, :private true, :arglists (quote ([rdr comma opts pending-forms]))}, :private true, :name oakcljs.tools.reader/read-unquote, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 20, :method-params ([rdr comma opts pending-forms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 657, :end-line 657, :max-fixed-arity 4, :fn-var true, :arglists (quote ([rdr comma opts pending-forms]))}, read-map {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 291, :column 8, :end-line 291, :end-column 16, :private true, :arglists (quote ([rdr _ opts pending-forms])), :doc "Read in a map, including its location if the reader is an indexing reader"}, :private true, :name oakcljs.tools.reader/read-map, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 16, :method-params ([rdr _ opts pending-forms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 291, :end-line 291, :max-fixed-arity 4, :fn-var true, :arglists (quote ([rdr _ opts pending-forms])), :doc "Read in a map, including its location if the reader is an indexing reader"}, read*-internal {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 894, :column 8, :end-line 894, :end-column 22, :private true, :arglists (quote ([reader eof-error? sentinel return-on opts pending-forms]))}, :private true, :name oakcljs.tools.reader/read*-internal, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 22, :method-params ([reader eof-error? sentinel return-on opts pending-forms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 894, :end-line 894, :max-fixed-arity 6, :fn-var true, :arglists (quote ([reader eof-error? sentinel return-on opts pending-forms]))}, unquote? {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 670, :column 8, :end-line 670, :end-column 16, :private true, :arglists (quote ([form]))}, :private true, :name oakcljs.tools.reader/unquote?, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 16, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 670, :end-line 670, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, default-data-readers {:name oakcljs.tools.reader/default-data-readers, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 889, :column 1, :end-line 889, :end-column 26, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 889, :column 6, :end-line 889, :end-column 26}, :doc "Default map of data reader functions provided by Clojure.\n  May be overridden by binding *data-readers*", :tag cljs.core/IMap}, macros {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 817, :column 8, :end-line 817, :end-column 14, :private true, :arglists (quote ([ch]))}, :private true, :name oakcljs.tools.reader/macros, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 14, :method-params ([ch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 817, :end-line 817, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ch]))}, read-arg {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 632, :column 8, :end-line 632, :end-column 16, :private true, :arglists (quote ([rdr pct opts pending-forms]))}, :private true, :name oakcljs.tools.reader/read-arg, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 16, :method-params ([rdr pct opts pending-forms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 632, :end-line 632, :max-fixed-arity 4, :fn-var true, :arglists (quote ([rdr pct opts pending-forms]))}, match-feature {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 518, :column 8, :end-line 518, :end-column 21, :private true, :arglists (quote ([first-line rdr opts pending-forms])), :doc "Read next feature. If matched, read next form and return.\n   Otherwise, read and skip next form, returning READ_FINISHED or nil."}, :private true, :name oakcljs.tools.reader/match-feature, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 21, :method-params ([first-line rdr opts pending-forms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 518, :end-line 518, :max-fixed-arity 4, :fn-var true, :arglists (quote ([first-line rdr opts pending-forms])), :doc "Read next feature. If matched, read next form and return.\n   Otherwise, read and skip next form, returning READ_FINISHED or nil."}, read-namespaced-map {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 791, :column 8, :end-line 791, :end-column 27, :private true, :arglists (quote ([rdr _ opts pending-forms]))}, :private true, :name oakcljs.tools.reader/read-namespaced-map, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 27, :method-params ([rdr _ opts pending-forms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 791, :end-line 791, :max-fixed-arity 4, :fn-var true, :arglists (quote ([rdr _ opts pending-forms]))}, read-syntax-quote {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 785, :column 8, :end-line 785, :end-column 25, :private true, :arglists (quote ([rdr backquote opts pending-forms]))}, :private true, :name oakcljs.tools.reader/read-syntax-quote, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 25, :method-params ([rdr backquote opts pending-forms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 785, :end-line 785, :max-fixed-arity 4, :fn-var true, :arglists (quote ([rdr backquote opts pending-forms]))}, READ_FINISHED {:name oakcljs.tools.reader/READ_FINISHED, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 203, :column 1, :end-line 203, :end-column 33, :private true, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 203, :column 20, :end-line 203, :end-column 33, :private true}, :tag object}, read-list {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 247, :column 8, :end-line 247, :end-column 17, :private true, :arglists (quote ([rdr _ opts pending-forms])), :doc "Read in a list, including its location if the reader is an indexing reader"}, :private true, :name oakcljs.tools.reader/read-list, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 17, :method-params ([rdr _ opts pending-forms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 247, :end-line 247, :max-fixed-arity 4, :fn-var true, :arglists (quote ([rdr _ opts pending-forms])), :doc "Read in a list, including its location if the reader is an indexing reader"}, read-cond-delimited {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 537, :column 8, :end-line 537, :end-column 27, :private true, :arglists (quote ([rdr splicing opts pending-forms]))}, :private true, :name oakcljs.tools.reader/read-cond-delimited, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 27, :method-params ([rdr splicing opts pending-forms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 537, :end-line 537, :max-fixed-arity 4, :fn-var true, :arglists (quote ([rdr splicing opts pending-forms]))}, RESERVED_FEATURES {:name oakcljs.tools.reader/RESERVED_FEATURES, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 480, :column 1, :end-line 480, :end-column 33, :private true, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 480, :column 16, :end-line 480, :end-column 33, :private true}, :tag cljs.core/ISet}, dispatch-macros {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 841, :column 8, :end-line 841, :end-column 23, :private true, :arglists (quote ([ch]))}, :private true, :name oakcljs.tools.reader/dispatch-macros, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 23, :method-params ([ch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 841, :end-line 841, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ch]))}, read* {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 916, :column 8, :end-line 916, :end-column 13, :private true, :arglists (quote ([reader eof-error? sentinel opts pending-forms] [reader eof-error? sentinel return-on opts pending-forms])), :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([reader eof-error? sentinel opts pending-forms] [reader eof-error? sentinel return-on opts pending-forms]), :arglists ([reader eof-error? sentinel opts pending-forms] [reader eof-error? sentinel return-on opts pending-forms]), :arglists-meta (nil nil)}}, :private true, :name oakcljs.tools.reader/read*, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([reader eof-error? sentinel opts pending-forms] [reader eof-error? sentinel return-on opts pending-forms]), :arglists ([reader eof-error? sentinel opts pending-forms] [reader eof-error? sentinel return-on opts pending-forms]), :arglists-meta (nil nil)}, :method-params ([reader eof-error? sentinel opts pending-forms] [reader eof-error? sentinel return-on opts pending-forms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 916, :end-line 916, :max-fixed-arity 6, :fn-var true, :arglists ([reader eof-error? sentinel opts pending-forms] [reader eof-error? sentinel return-on opts pending-forms])}, *data-readers* {:meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 873, :column 16, :end-line 873, :end-column 30, :dynamic true}, :name oakcljs.tools.reader/*data-readers*, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 30, :column 1, :dynamic true, :line 873, :end-line 873, :tag cljs.core/IMap, :doc "Map from reader tag symbols to data reader Vars.\n  Reader tags without namespace qualifiers are reserved for Clojure.\n  This light version of tools.reader has no implementation for default\n  reader tags such as #inst and #uuid."}, syntax-quote-coll {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 716, :column 8, :end-line 716, :end-column 25, :private true, :arglists (quote ([type coll]))}, :private true, :name oakcljs.tools.reader/syntax-quote-coll, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 25, :method-params ([type coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 716, :end-line 716, :max-fixed-arity 2, :fn-var true, :arglists (quote ([type coll]))}, *read-delim* {:name oakcljs.tools.reader/*read-delim*, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 205, :column 1, :end-line 205, :end-column 28, :dynamic true, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 205, :column 16, :end-line 205, :end-column 28, :dynamic true}, :tag boolean}, resolve-symbol {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 736, :column 17, :end-line 736, :end-column 31, :dynamic true, :arglists (quote ([s])), :doc "Resolve a symbol s into its fully qualified namespace version"}, :name oakcljs.tools.reader/resolve-symbol, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 31, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 736, :end-line 736, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Resolve a symbol s into its fully qualified namespace version"}, read-delimited {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 220, :column 8, :end-line 220, :end-column 22, :private true, :arglists (quote ([delim rdr opts pending-forms])), :doc "Reads and returns a collection ended with delim"}, :private true, :name oakcljs.tools.reader/read-delimited, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 22, :method-params ([delim rdr opts pending-forms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 220, :end-line 220, :max-fixed-arity 4, :fn-var true, :arglists (quote ([delim rdr opts pending-forms])), :doc "Reads and returns a collection ended with delim"}, read-token {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 48, :column 8, :end-line 48, :end-column 18, :private true, :arglists (quote ([rdr initch])), :doc "Read in a single logical token from the reader"}, :private true, :name oakcljs.tools.reader/read-token, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 18, :method-params ([rdr initch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rdr initch])), :doc "Read in a single logical token from the reader"}, read-cond {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 567, :column 8, :end-line 567, :end-column 17, :private true, :arglists (quote ([rdr _ opts pending-forms]))}, :private true, :name oakcljs.tools.reader/read-cond, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 17, :method-params ([rdr _ opts pending-forms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 567, :end-line 567, :max-fixed-arity 4, :fn-var true, :arglists (quote ([rdr _ opts pending-forms]))}, upper-limit {:meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 145, :column 24, :end-line 145, :end-column 35, :const true, :private true}, :private true, :name oakcljs.tools.reader/upper-limit, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 35, :column 1, :const true, :line 145, :end-line 145, :tag any}, loc-info {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 362, :column 8, :end-line 362, :end-column 16, :private true, :arglists (quote ([rdr line column]))}, :private true, :name oakcljs.tools.reader/loc-info, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 16, :method-params ([rdr line column]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 362, :end-line 362, :max-fixed-arity 3, :fn-var true, :arglists (quote ([rdr line column]))}, gensym-env {:meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 655, :column 26, :end-line 655, :end-column 36, :dynamic true, :private true}, :private true, :name oakcljs.tools.reader/gensym-env, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 36, :column 1, :dynamic true, :line 655, :end-line 655, :tag clj-nil}, *alias-map* {:meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 395, :column 16, :end-line 395, :end-column 27, :dynamic true}, :name oakcljs.tools.reader/*alias-map*, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 27, :column 1, :dynamic true, :line 395, :end-line 395, :tag clj-nil, :doc "Map from ns alias to ns, if non-nil, it will be used to resolve read-time\n   ns aliases.\n\n   Defaults to nil"}, *wrap-value-and-add-metadata?* {:name oakcljs.tools.reader/*wrap-value-and-add-metadata?*, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 226, :column 1, :end-line 226, :end-column 46, :dynamic true, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 226, :column 16, :end-line 226, :end-column 46, :dynamic true}, :tag boolean}, read-regex {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 85, :column 7, :end-line 85, :end-column 17, :arglists (quote ([rdr ch opts pending-forms]))}, :name oakcljs.tools.reader/read-regex, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 17, :method-params ([rdr ch opts pending-forms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 4, :fn-var true, :arglists (quote ([rdr ch opts pending-forms]))}, sb {:name oakcljs.tools.reader/sb, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 46, :column 1, :end-line 46, :end-column 8, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 46, :column 6, :end-line 46, :end-column 8}, :tag goog/string.StringBuffer}, read-dispatch {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 69, :column 8, :end-line 69, :end-column 21, :private true, :arglists (quote ([rdr _ opts pending-forms]))}, :private true, :name oakcljs.tools.reader/read-dispatch, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 21, :method-params ([rdr _ opts pending-forms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 4, :fn-var true, :arglists (quote ([rdr _ opts pending-forms]))}, check-eof-error {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 488, :column 8, :end-line 488, :end-column 23, :private true, :arglists (quote ([form rdr first-line]))}, :private true, :name oakcljs.tools.reader/check-eof-error, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 23, :method-params ([form rdr first-line]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 488, :end-line 488, :max-fixed-arity 3, :fn-var true, :arglists (quote ([form rdr first-line]))}, check-invalid-read-cond {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 500, :column 8, :end-line 500, :end-column 31, :private true, :arglists (quote ([form rdr first-line]))}, :private true, :name oakcljs.tools.reader/check-invalid-read-cond, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 31, :method-params ([form rdr first-line]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 500, :end-line 500, :max-fixed-arity 3, :fn-var true, :arglists (quote ([form rdr first-line]))}, read-string {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 964, :column 7, :end-line 964, :end-column 18, :arglists (quote ([s] [opts s])), :doc "Reads one object from the string s.\n   Returns nil when s is nil or empty.\n\n   To read data structures only, use oakclojure.tools.reader.edn/read-string\n\n   Note that the function signature of oakclojure.tools.reader/read-string and\n   oakclojure.tools.reader.edn/read-string is not the same for eof-handling", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([s] [opts s]), :arglists ([s] [opts s]), :arglists-meta (nil nil)}}, :name oakcljs.tools.reader/read-string, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([s] [opts s]), :arglists ([s] [opts s]), :arglists-meta (nil nil)}, :method-params ([s] [opts s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 964, :end-line 964, :max-fixed-arity 2, :fn-var true, :arglists ([s] [opts s]), :doc "Reads one object from the string s.\n   Returns nil when s is nil or empty.\n\n   To read data structures only, use oakclojure.tools.reader.edn/read-string\n\n   Note that the function signature of oakclojure.tools.reader/read-string and\n   oakclojure.tools.reader.edn/read-string is not the same for eof-handling"}, check-reserved-features {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 495, :column 8, :end-line 495, :end-column 31, :private true, :arglists (quote ([rdr form]))}, :private true, :name oakcljs.tools.reader/check-reserved-features, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 31, :method-params ([rdr form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 495, :end-line 495, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rdr form]))}, has-feature? {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 482, :column 8, :end-line 482, :end-column 20, :private true, :arglists (quote ([rdr feature opts]))}, :private true, :name oakcljs.tools.reader/has-feature?, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 20, :method-params ([rdr feature opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 482, :end-line 482, :max-fixed-arity 3, :fn-var true, :arglists (quote ([rdr feature opts]))}, valid-octal? {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 148, :column 8, :end-line 148, :end-column 20, :private true, :arglists (quote ([token base]))}, :private true, :name oakcljs.tools.reader/valid-octal?, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 20, :method-params ([token base]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 148, :end-line 148, :max-fixed-arity 2, :fn-var true, :arglists (quote ([token base]))}, escape-char {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 329, :column 8, :end-line 329, :end-column 19, :private true, :arglists (quote ([sb rdr]))}, :private true, :name oakcljs.tools.reader/escape-char, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 19, :method-params ([sb rdr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 329, :end-line 329, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sb rdr]))}, read-char* {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 151, :column 8, :end-line 151, :end-column 18, :private true, :arglists (quote ([rdr backslash opts pending-forms])), :doc "Read in a character literal"}, :private true, :name oakcljs.tools.reader/read-char*, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 18, :method-params ([rdr backslash opts pending-forms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 151, :end-line 151, :max-fixed-arity 4, :fn-var true, :arglists (quote ([rdr backslash opts pending-forms])), :doc "Read in a character literal"}, resolve-ns {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 402, :column 8, :end-line 402, :end-column 18, :private true, :arglists (quote ([sym]))}, :private true, :name oakcljs.tools.reader/resolve-ns, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 18, :method-params ([sym]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 402, :end-line 402, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sym]))}, read-delimited-internal {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 207, :column 8, :end-line 207, :end-column 31, :private true, :arglists (quote ([delim rdr opts pending-forms]))}, :private true, :name oakcljs.tools.reader/read-delimited-internal, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 31, :method-params ([delim rdr opts pending-forms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 207, :end-line 207, :max-fixed-arity 4, :fn-var true, :arglists (quote ([delim rdr opts pending-forms]))}, read-string* {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 350, :column 8, :end-line 350, :end-column 20, :private true, :arglists (quote ([reader _ opts pending-forms]))}, :private true, :name oakcljs.tools.reader/read-string*, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 20, :method-params ([reader _ opts pending-forms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 350, :end-line 350, :max-fixed-arity 4, :fn-var true, :arglists (quote ([reader _ opts pending-forms]))}, macro-terminating? {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 41, :column 17, :end-line 41, :end-column 35, :tag boolean, :private true, :arglists (quote ([ch]))}, :private true, :name oakcljs.tools.reader/macro-terminating?, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 35, :method-params ([ch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :ret-tag boolean, :end-line 41, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([ch]))}, map-func {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 724, :column 7, :end-line 724, :end-column 15, :arglists (quote ([coll])), :doc "Decide which map type to use, array-map if less than 16 elements"}, :name oakcljs.tools.reader/map-func, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 15, :method-params ([coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 724, :end-line 724, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coll])), :doc "Decide which map type to use, array-map if less than 16 elements"}, lower-limit {:meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 146, :column 24, :end-line 146, :end-column 35, :const true, :private true}, :private true, :name oakcljs.tools.reader/lower-limit, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 35, :column 1, :const true, :line 146, :end-line 146, :tag any}, ending-line-col-info {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 198, :column 8, :end-line 198, :end-column 28, :private true, :arglists (quote ([rdr]))}, :private true, :name oakcljs.tools.reader/ending-line-col-info, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 28, :method-params ([rdr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 198, :end-line 198, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rdr]))}, register-arg {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 618, :column 8, :end-line 618, :end-column 20, :private true, :arglists (quote ([n])), :doc "Registers an argument to the arg-env"}, :private true, :name oakcljs.tools.reader/register-arg, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 20, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 618, :end-line 618, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n])), :doc "Registers an argument to the arg-env"}, read-keyword {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 407, :column 8, :end-line 407, :end-column 20, :private true, :arglists (quote ([reader initch opts pending-forms]))}, :private true, :name oakcljs.tools.reader/read-keyword, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 20, :method-params ([reader initch opts pending-forms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 407, :end-line 407, :max-fixed-arity 4, :fn-var true, :arglists (quote ([reader initch opts pending-forms]))}, read-discard {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 474, :column 8, :end-line 474, :end-column 20, :private true, :arglists (quote ([rdr _ opts pending-forms])), :doc "Read and discard the first object from rdr"}, :private true, :name oakcljs.tools.reader/read-discard, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 20, :method-params ([rdr _ opts pending-forms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 474, :end-line 474, :max-fixed-arity 4, :fn-var true, :arglists (quote ([rdr _ opts pending-forms])), :doc "Read and discard the first object from rdr"}, garg {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 591, :column 8, :end-line 591, :end-column 12, :private true, :arglists (quote ([n])), :doc "Get a symbol for an anonymous ?argument?"}, :private true, :name oakcljs.tools.reader/garg, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 12, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 591, :end-line 591, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n])), :doc "Get a symbol for an anonymous ?argument?"}, read-vector {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 265, :column 8, :end-line 265, :end-column 19, :private true, :arglists (quote ([rdr _ opts pending-forms])), :doc "Read in a vector, including its location if the reader is an indexing reader"}, :private true, :name oakcljs.tools.reader/read-vector, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 19, :method-params ([rdr _ opts pending-forms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 265, :end-line 265, :max-fixed-arity 4, :fn-var true, :arglists (quote ([rdr _ opts pending-forms])), :doc "Read in a vector, including its location if the reader is an indexing reader"}, read-number {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 318, :column 8, :end-line 318, :end-column 19, :private true, :arglists (quote ([rdr initch]))}, :private true, :name oakcljs.tools.reader/read-number, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 19, :method-params ([rdr initch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 318, :end-line 318, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rdr initch]))}, add-meta {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 710, :column 8, :end-line 710, :end-column 16, :private true, :arglists (quote ([form ret]))}, :private true, :name oakcljs.tools.reader/add-meta, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 16, :method-params ([form ret]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 710, :end-line 710, :max-fixed-arity 2, :fn-var true, :arglists (quote ([form ret]))}, register-gensym {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 699, :column 8, :end-line 699, :end-column 23, :private true, :arglists (quote ([sym]))}, :private true, :name oakcljs.tools.reader/register-gensym, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 23, :method-params ([sym]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 699, :end-line 699, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sym]))}, expand-list {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :line 674, :column 8, :end-line 674, :end-column 19, :private true, :arglists (quote ([s])), :doc "Expand a list by resolving its syntax quotes and unquotes"}, :private true, :name oakcljs.tools.reader/expand-list, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/oakcljs/tools/reader.cljs", :end-column 19, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 674, :end-line 674, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Expand a list by resolving its syntax quotes and unquotes"}}, :cljs.spec/registry-ref [], :require-macros {oakcljs.tools.reader.reader-types oakcljs.tools.reader.reader-types}, :cljs.analyzer/constants {:seen #{& :features clojure.core/list cljs.core/array-map :reader-exception :else cljs.core/hash-map cljs.core/apply :default :file cljs.core/concat :end-column :wrapped? :read-cond :type :preserve :source :illegal-argument cljs.core/with-meta :allow :column :illegal-state clojure.core/unquote-splicing :line fn* clojure.core/deref / clojure.core/unquote :end-line cljs.core/vec cljs.core/sequence :unsupported-operation var quote :eof cljs.core/hash-set cljs.core/list :eofthrow :runtime-exception :none}, :order [:type :illegal-argument :else :file :line :column :end-line :end-column :wrapped? / :none :default :features :preserve :allow :read-cond :runtime-exception :illegal-state & fn* clojure.core/unquote-splicing clojure.core/unquote clojure.core/list :source cljs.core/with-meta cljs.core/sequence cljs.core/concat cljs.core/apply cljs.core/hash-map cljs.core/array-map quote cljs.core/vec cljs.core/hash-set cljs.core/list :unsupported-operation clojure.core/deref var :reader-exception :eof :eofthrow]}, :doc "A clojure reader in clojure"}