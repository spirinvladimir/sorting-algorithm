{:rename-macros {}, :renames {}, :use-macros {fdef cljs.spec.alpha}, :excludes #{}, :name mistakes-were-made.core-spec, :imports nil, :requires {c mistakes-were-made.core, mistakes-were-made.core mistakes-were-made.core, s cljs.spec.alpha, cljs.spec.alpha cljs.spec.alpha, clojure.spec.alpha cljs.spec.alpha}, :cljs.spec/speced-vars [], :uses {}, :defs {atom? {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/mistakes_were_made/core_spec.cljc", :line 5, :column 6, :end-line 5, :end-column 11}, :name mistakes-were-made.core-spec/atom?, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/-msrsqg/public/paren-soup.out/mistakes_were_made/core_spec.cljc", :end-column 11, :method-params ([p1__14249#]), :protocol-impl nil, :arglists-meta (), :column 1, :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists nil}}, :cljs.spec/registry-ref [[:mistakes-were-made.core-spec/original-cursor-position :mistakes-were-made.core-spec/cursor-position] [:mistakes-were-made.core-spec/cursor-position (cljs.spec.alpha/tuple cljs.core/integer? cljs.core/integer?)] [:mistakes-were-made.core-spec/states (cljs.spec.alpha/coll-of :mistakes-were-made.core-spec/staate)] [:mistakes-were-made.core-spec/current-state cljs.core/integer?] [:mistakes-were-made.core-spec/state (cljs.spec.alpha/keys :req-un [:mistakes-were-made.core-spec/cursor-position :mistakes-were-made.core-spec/text] :opt-un [:mistakes-were-made.core-spec/original-cursor-position])] [:mistakes-were-made.core-spec/history (cljs.spec.alpha/keys :req-un [:mistakes-were-made.core-spec/current-state :mistakes-were-made.core-spec/states])] [:mistakes-were-made.core-spec/text cljs.core/string?]], :require-macros {s cljs.spec.alpha, cljs.spec.alpha cljs.spec.alpha, clojure.spec.alpha cljs.spec.alpha}, :cljs.analyzer/constants {:seen #{:args mistakes-were-made.core-spec/atom? :req-un :opt-un :mistakes-were-made.core-spec/original-cursor-position mistakes-were-made.core/undo! cljs.core/boolean? :ret :gfn :mistakes-were-made.core-spec/cursor-position :mistakes-were-made.core-spec/states :pred-exprs :keys-pred mistakes-were-made.core/redo! :current-state :opt-keys :original-cursor-position :cursor-position :states mistakes-were-made.core/get-previous-state cljs.spec.alpha/coll-of cljs.spec.alpha/cat :cljs.spec.alpha/kind-form :mistakes-were-made.core-spec/current-state cljs.core/string? :req-specs cljs.spec.alpha/fspec cljs.spec.alpha/nilable mistakes-were-made.core/get-next-state cljs.spec.alpha/tuple :state cljs.core/contains? cljs.core/map? :cljs.spec.alpha/cpred mistakes-were-made.core/can-redo? % cljs.spec.alpha/keys :mistakes-were-made.core-spec/state :req mistakes-were-made.core/can-undo? cljs.core/integer? mistakes-were-made.core/update-edit-history! :mistakes-were-made.core-spec/staate :req-keys cljs.core/fn :opt-specs :mistakes-were-made.core-spec/history :pred-forms mistakes-were-made.core/get-current-state :mistakes-were-made.core-spec/text mistakes-were-made.core/create-edit-history :cljs.spec.alpha/conform-all mistakes-were-made.core/update-cursor-position! :cljs.spec.alpha/describe :opt :text :edit-history}, :order [:mistakes-were-made.core-spec/text cljs.core/string? :mistakes-were-made.core-spec/cursor-position cljs.spec.alpha/tuple cljs.core/integer? :mistakes-were-made.core-spec/original-cursor-position :mistakes-were-made.core-spec/state cljs.spec.alpha/keys :req-un :opt-un :gfn :pred-exprs :keys-pred :opt-keys :req-specs :req :req-keys :opt-specs :pred-forms :opt :cursor-position :text :original-cursor-position cljs.core/fn % cljs.core/map? cljs.core/contains? :mistakes-were-made.core-spec/states cljs.spec.alpha/coll-of :mistakes-were-made.core-spec/staate :cljs.spec.alpha/kind-form :cljs.spec.alpha/cpred :cljs.spec.alpha/conform-all :cljs.spec.alpha/describe :mistakes-were-made.core-spec/current-state :mistakes-were-made.core-spec/history :current-state :states mistakes-were-made.core/create-edit-history cljs.spec.alpha/fspec :args cljs.spec.alpha/cat :ret mistakes-were-made.core/update-edit-history! :edit-history mistakes-were-made.core-spec/atom? :state cljs.spec.alpha/nilable mistakes-were-made.core/update-cursor-position! mistakes-were-made.core/get-current-state mistakes-were-made.core/get-previous-state mistakes-were-made.core/get-next-state mistakes-were-made.core/undo! mistakes-were-made.core/redo! mistakes-were-made.core/can-undo? cljs.core/boolean? mistakes-were-made.core/can-redo?]}, :doc nil}