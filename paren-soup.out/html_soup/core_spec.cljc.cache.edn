{:rename-macros {}, :renames {}, :use-macros {fdef cljs.spec.alpha}, :excludes #{}, :name html-soup.core-spec, :imports nil, :requires {c html-soup.core, html-soup.core html-soup.core, ts tag-soup.core-spec, tag-soup.core-spec tag-soup.core-spec, s cljs.spec.alpha, cljs.spec.alpha cljs.spec.alpha, clojure.spec.alpha cljs.spec.alpha}, :cljs.spec/speced-vars [], :uses {}, :cljs.spec/registry-ref [], :require-macros {s cljs.spec.alpha, cljs.spec.alpha cljs.spec.alpha, clojure.spec.alpha cljs.spec.alpha}, :cljs.analyzer/constants {:seen #{:args :tags html-soup.core/structurize-hiccup cljs.core/boolean? :ret html-soup.core/tag->html any? html-soup.core/escape-html-str cljs.spec.alpha/alt :two-args html-soup.core/line->hiccup cljs.spec.alpha/coll-of cljs.spec.alpha/cat :cljs.spec.alpha/kind-form html-soup.core/tag->hiccup cljs.core/string? :parse-fn html-soup.core/parse-lines html-soup.core/escape-html-char :lines cljs.spec.alpha/fspec cljs.spec.alpha/nilable string? html-soup.core/code->html :cljs.spec.alpha/cpred cljs.core/fn? :flat-hiccup :one-arg html-soup.core/line->html :str :line html-soup.core/split-lines :tag-soup.core-spec/tag :code html-soup.core/line->segments :tag-soup.core-spec/all-tags html-soup.core/code->hiccup :tag :structured-hiccup :tag-soup.core-spec/tags-for-line :escape? :cljs.spec.alpha/conform-all cljs.core/any? :cljs.spec.alpha/describe :tags-for-line}, :order [html-soup.core/split-lines cljs.spec.alpha/fspec :args cljs.spec.alpha/cat :str cljs.core/string? :ret html-soup.core/escape-html-str html-soup.core/escape-html-char html-soup.core/tag->html :tag :tag-soup.core-spec/tag html-soup.core/tag->hiccup cljs.spec.alpha/coll-of cljs.core/any? any? :cljs.spec.alpha/kind-form :cljs.spec.alpha/cpred :cljs.spec.alpha/conform-all :cljs.spec.alpha/describe html-soup.core/line->segments :line :tags-for-line cljs.spec.alpha/nilable :tag-soup.core-spec/tags-for-line :escape? cljs.core/boolean? string? html-soup.core/line->html html-soup.core/line->hiccup html-soup.core/parse-lines :parse-fn cljs.core/fn? :lines :tags :tag-soup.core-spec/all-tags html-soup.core/code->html :code html-soup.core/structurize-hiccup cljs.spec.alpha/alt :one-arg :flat-hiccup :two-args :structured-hiccup html-soup.core/code->hiccup]}, :doc nil}