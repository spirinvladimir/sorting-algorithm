{:rename-macros {}, :renames {}, :use-macros {fdef cljs.spec.alpha}, :excludes #{}, :name paren-soup.console-spec, :imports nil, :requires {c paren-soup.console, paren-soup.console paren-soup.console, mistakes-were-made.core-spec mistakes-were-made.core-spec, s cljs.spec.alpha, cljs.spec.alpha cljs.spec.alpha, clojure.spec.alpha cljs.spec.alpha}, :cljs.spec/speced-vars [], :uses {atom? mistakes-were-made.core-spec}, :cljs.spec/registry-ref [], :require-macros {s cljs.spec.alpha, cljs.spec.alpha cljs.spec.alpha, clojure.spec.alpha cljs.spec.alpha}, :cljs.analyzer/constants {:seen #{:args mistakes-were-made.core-spec/atom? :ret paren-soup.console/up! cljs.spec.alpha/cat cljs.core/string? :start cljs.spec.alpha/fspec cljs.spec.alpha/nilable paren-soup.console/get-console-start paren-soup.console/update-console-start! cljs.core/number? paren-soup.console/get-next-line paren-soup.console/create-console-history :line :console-history paren-soup.console/get-previous-line cljs.core/any? paren-soup.console/update-console-history! paren-soup.console/down!}, :order [paren-soup.console/create-console-history cljs.spec.alpha/fspec :args cljs.spec.alpha/cat :ret mistakes-were-made.core-spec/atom? paren-soup.console/get-console-start :console-history cljs.core/any? paren-soup.console/update-console-start! :start cljs.core/number? paren-soup.console/update-console-history! :line cljs.core/string? paren-soup.console/get-previous-line cljs.spec.alpha/nilable paren-soup.console/get-next-line paren-soup.console/up! paren-soup.console/down!]}, :doc nil}