{:rename-macros {}, :renames {}, :externs {Element {}, Object {}}, :use-macros {fdef cljs.spec.alpha}, :excludes #{}, :name paren-soup.core-spec, :imports nil, :requires {paren-soup.dom-spec paren-soup.dom-spec, clojure.spec.alpha cljs.spec.alpha, paren-soup.core paren-soup.core, mistakes-were-made.core-spec mistakes-were-made.core-spec, paren-soup.console-spec paren-soup.console-spec, html-soup.core-spec html-soup.core-spec, s cljs.spec.alpha, c paren-soup.core, paren-soup.instarepl-spec paren-soup.instarepl-spec, cljs.spec.alpha cljs.spec.alpha, cross-parinfer.core-spec cross-parinfer.core-spec}, :cljs.spec/speced-vars [], :uses {atom? mistakes-were-made.core-spec}, :defs {channel? {:name paren-soup.core-spec/channel?, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core_spec.cljs", :line 11, :column 1, :end-line 11, :end-column 14, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core_spec.cljs", :line 11, :column 6, :end-line 11, :end-column 14}, :tag boolean}, transient-map? {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core_spec.cljs", :line 12, :column 6, :end-line 12, :end-column 20}, :name paren-soup.core-spec/transient-map?, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core_spec.cljs", :end-column 20, :method-params ([p1__14321#]), :protocol-impl nil, :arglists-meta (), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists nil}, elem? {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core_spec.cljs", :line 14, :column 6, :end-line 14, :end-column 11}, :name paren-soup.core-spec/elem?, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core_spec.cljs", :end-column 11, :method-params ([p1__14322#]), :protocol-impl nil, :arglists-meta (), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists nil}, obj? {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core_spec.cljs", :line 15, :column 6, :end-line 15, :end-column 10}, :name paren-soup.core-spec/obj?, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core_spec.cljs", :end-column 10, :method-params ([p1__14323#]), :protocol-impl nil, :arglists-meta (), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists nil}}, :cljs.spec/registry-ref [], :require-macros {s cljs.spec.alpha, cljs.spec.alpha cljs.spec.alpha, clojure.spec.alpha cljs.spec.alpha}, :cljs.analyzer/constants {:seen #{:args mistakes-were-made.core-spec/atom? paren-soup.core/update-edit-history! cljs.core/boolean? paren-soup.core/refresh-console-content! :three-args :ret :cropped-state cljs.core/keyword? paren-soup.core/add-newline :last-elem cljs.spec.alpha/alt :console-start-num :two-args paren-soup.core-spec/obj? :key-name :paren-soup :parent paren-soup.core/init-state paren-soup.core/add-parinfer-after-console-start cljs.spec.alpha/cat :content :numbers paren-soup.core/refresh-numbers! :m cljs.core/string? :compiler-fn cljs.spec.alpha/or paren-soup.core/init-all :parent-elem paren-soup.core/add-parinfer cljs.spec.alpha/fspec :state paren-soup.core/Editor cljs.core/map? paren-soup.core-spec/channel? paren-soup.core/refresh-instarepl! % cljs.core/fn? paren-soup.core/hide-error-messages! :level paren-soup.core/init p1__14324# paren-soup.core/key-name? paren-soup.core/show-error-message! cljs.core/number? paren-soup.core/add-event-listeners! :event :full-selection? :enable? :instarepl fn* :opts cljs.core/fn paren-soup.core-spec/transient-map? paren-soup.core/rainbow-delimiters paren-soup.core/refresh-content-element! :events-chan :clj? paren-soup.core/create-editor paren-soup.core/prevent-default? paren-soup.core/line-numbers paren-soup.core-spec/elem? paren-soup.core/refresh-content! :line-count paren-soup.core/post-refresh-content! :crop? cljs.core/any? cljs.core/instance? :edit-history paren-soup.core/update-highlight!}, :order [paren-soup.core/show-error-message! cljs.spec.alpha/fspec :args cljs.spec.alpha/cat :parent-elem paren-soup.core-spec/elem? :event paren-soup.core-spec/obj? cljs.core/any? paren-soup.core/hide-error-messages! paren-soup.core/rainbow-delimiters cljs.spec.alpha/alt :two-args :parent :level cljs.core/number? :three-args :m paren-soup.core-spec/transient-map? :ret cljs.spec.alpha/or cljs.core/map? paren-soup.core/line-numbers :line-count cljs.core/string? paren-soup.core/refresh-numbers! :numbers paren-soup.core/refresh-instarepl! :instarepl :content :compiler-fn cljs.core/fn? paren-soup.core/post-refresh-content! :events-chan paren-soup.core-spec/channel? :state paren-soup.core/refresh-content-element! :cropped-state paren-soup.core/refresh-content! paren-soup.core/refresh-console-content! :console-start-num :clj? cljs.core/boolean? paren-soup.core/add-parinfer-after-console-start paren-soup.core/add-parinfer :enable? paren-soup.core/add-newline paren-soup.core/init-state :crop? :full-selection? paren-soup.core/update-edit-history! :edit-history mistakes-were-made.core-spec/atom? paren-soup.core/update-highlight! :last-elem paren-soup.core/key-name? :key-name cljs.core/keyword? paren-soup.core/create-editor :paren-soup :opts fn* p1__14324# cljs.core/instance? paren-soup.core/Editor cljs.core/fn % paren-soup.core/prevent-default? paren-soup.core/add-event-listeners! paren-soup.core/init paren-soup.core/init-all]}, :doc nil}