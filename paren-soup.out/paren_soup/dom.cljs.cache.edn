{:rename-macros {}, :renames {}, :externs {rangy {getSelection {}}, Object {rangeCount {}, cloneRange {}, selectNodeContents {}, restoreCharacterRanges {}, endOffset {}, toString {}, setEnd {}, endContainer {}, saveCharacterRanges {}, length {}, getRangeAt {}}, window {getSelection {}}}, :use-macros {}, :excludes #{}, :name paren-soup.dom, :imports nil, :requires {gobj goog.object, goog.object goog.object}, :cljs.spec/speced-vars [], :uses nil, :defs {top-level? {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :line 76, :column 7, :end-line 76, :end-column 17, :arglists (quote ([node]))}, :name paren-soup.dom/top-level?, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :end-column 17, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, get-selection {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :line 4, :column 7, :end-line 4, :end-column 20, :arglists (quote ([element full-selection?])), :doc "Returns the objects related to selection for the given element. If full-selection? is true,\nit will use rangy instead of the native selection API in order to get the beginning and ending\nof the selection (it is, however, much slower)."}, :name paren-soup.dom/get-selection, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :end-column 20, :method-params ([element full-selection?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 2, :fn-var true, :arglists (quote ([element full-selection?])), :doc "Returns the objects related to selection for the given element. If full-selection? is true,\nit will use rangy instead of the native selection API in order to get the beginning and ending\nof the selection (it is, however, much slower)."}, get-cursor-position {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :line 29, :column 7, :end-line 29, :end-column 26, :arglists (quote ([element full-selection?])), :doc "Returns the cursor position."}, :name paren-soup.dom/get-cursor-position, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :end-column 26, :method-params ([element full-selection?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([element full-selection?])), :doc "Returns the cursor position."}, text-node? {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :line 64, :column 7, :end-line 64, :end-column 17, :arglists (quote ([node]))}, :name paren-soup.dom/text-node?, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :end-column 17, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, get-focused-form {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :line 98, :column 6, :end-line 98, :end-column 22}, :name paren-soup.dom/get-focused-form, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 98, :end-line 98, :max-fixed-arity 0, :fn-var true, :arglists nil}, get-focused-top-level {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :line 107, :column 7, :end-line 107, :end-column 28, :arglists (quote ([]))}, :name paren-soup.dom/get-focused-top-level, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :end-column 28, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-parent {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :line 46, :column 7, :end-line 46, :end-column 17, :arglists (quote ([node class-name])), :doc "Returns the nearest parent with the given class name."}, :name paren-soup.dom/get-parent, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :end-column 17, :method-params ([node class-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([node class-name])), :doc "Returns the nearest parent with the given class name."}, coll-node? {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :line 72, :column 7, :end-line 72, :end-column 17, :arglists (quote ([node]))}, :name paren-soup.dom/coll-node?, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :end-column 17, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, get-nearest-ns {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :line 100, :column 7, :end-line 100, :end-column 21, :arglists (quote ([node]))}, :name paren-soup.dom/get-nearest-ns, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :end-column 21, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, get-completion-info {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :line 125, :column 7, :end-line 125, :end-column 26, :arglists (quote ([]))}, :name paren-soup.dom/get-completion-info, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 125, :end-line 125, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, set-cursor-position! {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :line 34, :column 7, :end-line 34, :end-column 27, :arglists (quote ([element position])), :doc "Moves the cursor to the specified position."}, :name paren-soup.dom/set-cursor-position!, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :end-column 27, :method-params ([element position]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists (quote ([element position])), :doc "Moves the cursor to the specified position."}, get-focused-elem {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :line 95, :column 7, :end-line 95, :end-column 23, :arglists (quote ([class-name]))}, :name paren-soup.dom/get-focused-elem, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :end-column 23, :method-params ([class-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 1, :fn-var true, :arglists (quote ([class-name]))}, error-node? {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :line 68, :column 7, :end-line 68, :end-column 18, :arglists (quote ([node]))}, :name paren-soup.dom/error-node?, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :end-column 18, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, get-completion-context {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :line 115, :column 7, :end-line 115, :end-column 29, :arglists (quote ([symbol-length cursor-offset]))}, :name paren-soup.dom/get-completion-context, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :end-column 29, :method-params ([symbol-length cursor-offset]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 2, :fn-var true, :arglists (quote ([symbol-length cursor-offset]))}, common-ancestor {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :line 80, :column 7, :end-line 80, :end-column 22, :arglists (quote ([first-node second-node])), :doc "Returns the common ancestor of the given nodes."}, :name paren-soup.dom/common-ancestor, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :end-column 22, :method-params ([first-node second-node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 2, :fn-var true, :arglists (quote ([first-node second-node])), :doc "Returns the common ancestor of the given nodes."}, get-parents {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :line 55, :column 7, :end-line 55, :end-column 18, :arglists (quote ([node class-name])), :doc "Returns all the parents with the given class name."}, :name paren-soup.dom/get-parents, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/dom.cljs", :end-column 18, :method-params ([node class-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 2, :fn-var true, :arglists (quote ([node class-name])), :doc "Returns all the parents with the given class name."}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:element :else :cursor-position :ns :context-before :prefix :start-position :context-after :text}, :order [:element :cursor-position :else :ns :context-before :context-after :start-position :text :prefix]}, :doc nil}