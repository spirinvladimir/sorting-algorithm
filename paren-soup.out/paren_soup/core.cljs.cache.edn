{:rename-macros {}, :renames {}, :externs {document {createElement {}, execCommand {}, createTextNode {}, querySelectorAll {}}, Object {textContent {}, style {top {}, left {}}, className {}, innerHTML {}, childNodes {item {}, length {}}, anchorNode {}, focusNode {}, getPropertyValue {}, toString {}}, Error {}, rangy {getSelection {}, init {}}, window {getComputedStyle {}, getSelection {}}}, :use-macros {join clojure.string, go cljs.core.async.macros, replace clojure.string, trimr clojure.string}, :excludes #{}, :name paren-soup.core, :imports nil, :requires {console paren-soup.console, ir paren-soup.instarepl, goog.functions goog.functions, dom paren-soup.dom, mwm mistakes-were-made.core, html-soup.core html-soup.core, paren-soup.dom paren-soup.dom, hs html-soup.core, paren-soup.console paren-soup.console, cljs.core.async cljs.core.async, mistakes-were-made.core mistakes-were-made.core, events goog.events, paren-soup.instarepl paren-soup.instarepl, cp cross-parinfer.core, cljsjs.rangy-textrange cljsjs.rangy-textrange, cross-parinfer.core cross-parinfer.core, clojure.string clojure.string, goog.events goog.events, cljsjs.rangy-core cljsjs.rangy-core}, :cljs.spec/speced-vars [], :uses {<! cljs.core.async, join clojure.string, chan cljs.core.async, replace clojure.string, debounce goog.functions, trimr clojure.string, put! cljs.core.async}, :defs {can-undo {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 507, :column 16, :end-line 507, :end-column 24, :export true, :arglists (quote ([editor]))}, :name paren-soup.core/can-undo, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 24, :method-params ([editor]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 507, :end-line 507, :max-fixed-arity 1, :fn-var true, :arglists (quote ([editor]))}, show-error-message! {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 16, :column 7, :end-line 16, :end-column 26, :arglists (quote ([parent-elem event])), :doc "Shows a popup with an error message."}, :name paren-soup.core/show-error-message!, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 26, :method-params ([parent-elem event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([parent-elem event])), :doc "Shows a popup with an error message."}, focused-text {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 512, :column 16, :end-line 512, :end-column 28, :export true, :arglists (quote ([]))}, :name paren-soup.core/focused-text, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 28, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 512, :end-line 512, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, selected-text {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 513, :column 16, :end-line 513, :end-column 29, :export true, :arglists (quote ([]))}, :name paren-soup.core/selected-text, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 29, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 513, :end-line 513, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, can-redo? {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 278, :column 4, :end-line 278, :end-column 13, :protocol paren-soup.core/Editor, :doc nil, :arglists (quote ([this]))}, :protocol paren-soup.core/Editor, :name paren-soup.core/can-redo?, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 278, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, can-redo {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 508, :column 16, :end-line 508, :end-column 24, :export true, :arglists (quote ([editor]))}, :name paren-soup.core/can-redo, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 24, :method-params ([editor]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 508, :end-line 508, :max-fixed-arity 1, :fn-var true, :arglists (quote ([editor]))}, rainbow-delimiters {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 37, :column 7, :end-line 37, :end-column 25, :arglists (quote ([parent level] [parent level m])), :doc "Returns a map of elements and class names.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([parent level] [parent level m]), :arglists ([parent level] [parent level m]), :arglists-meta (nil nil)}}, :name paren-soup.core/rainbow-delimiters, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 25, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([parent level] [parent level m]), :arglists ([parent level] [parent level m]), :arglists-meta (nil nil)}, :method-params ([parent level] [parent level m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 3, :fn-var true, :arglists ([parent level] [parent level m]), :doc "Returns a map of elements and class names."}, up! {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 283, :column 4, :end-line 283, :end-column 7, :protocol paren-soup.core/Editor, :doc nil, :arglists (quote ([this]))}, :protocol paren-soup.core/Editor, :name paren-soup.core/up!, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 7, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 283, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, refresh! {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 286, :column 4, :end-line 286, :end-column 12, :protocol paren-soup.core/Editor, :doc nil, :arglists (quote ([this state]))}, :protocol paren-soup.core/Editor, :name paren-soup.core/refresh!, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 12, :method-params ([this state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 286, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this state])), :doc nil}, undo! {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 275, :column 4, :end-line 275, :end-column 9, :protocol paren-soup.core/Editor, :doc nil, :arglists (quote ([this]))}, :protocol paren-soup.core/Editor, :name paren-soup.core/undo!, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 9, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 275, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, key-name? {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 245, :column 7, :end-line 245, :end-column 16, :arglists (quote ([event key-name])), :doc "Returns true if the supplied key event involves the key(s) described by key-name."}, :name paren-soup.core/key-name?, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 16, :method-params ([event key-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 245, :end-line 245, :max-fixed-arity 2, :fn-var true, :arglists (quote ([event key-name])), :doc "Returns true if the supplied key event involves the key(s) described by key-name."}, eval {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 510, :column 16, :end-line 510, :end-column 20, :export true, :arglists (quote ([editor form callback]))}, :name paren-soup.core/eval, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 20, :method-params ([editor form callback]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 510, :end-line 510, :max-fixed-arity 3, :fn-var true, :arglists (quote ([editor form callback]))}, create-editor {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 293, :column 7, :end-line 293, :end-column 20, :arglists (quote ([paren-soup content events-chan {:keys [history-limit append-limit compiler-fn console-callback disable-clj?], :or {history-limit 100, append-limit 5000}}]))}, :name paren-soup.core/create-editor, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 20, :method-params ([paren-soup content events-chan p__12775]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 293, :end-line 293, :max-fixed-arity 4, :fn-var true, :arglists (quote ([paren-soup content events-chan {:keys [history-limit append-limit compiler-fn console-callback disable-clj?], :or {history-limit 100, append-limit 5000}}]))}, key-code {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 241, :column 7, :end-line 241, :end-column 15, :arglists (quote ([event]))}, :name paren-soup.core/key-code, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 15, :method-params ([event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 241, :end-line 241, :max-fixed-arity 1, :fn-var true, :arglists (quote ([event]))}, redo! {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 276, :column 4, :end-line 276, :end-column 9, :protocol paren-soup.core/Editor, :doc nil, :arglists (quote ([this]))}, :protocol paren-soup.core/Editor, :name paren-soup.core/redo!, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 9, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 276, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, post-refresh-content! {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 80, :column 7, :end-line 80, :end-column 28, :arglists (quote ([content events-chan state])), :doc "Does additional work on the content after it is rendered."}, :name paren-soup.core/post-refresh-content!, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 28, :method-params ([content events-chan state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 3, :fn-var true, :arglists (quote ([content events-chan state])), :doc "Does additional work on the content after it is rendered."}, tab! {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 285, :column 4, :end-line 285, :end-column 8, :protocol paren-soup.core/Editor, :doc nil, :arglists (quote ([this]))}, :protocol paren-soup.core/Editor, :name paren-soup.core/tab!, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 8, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 285, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, refresh-content-element! {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 100, :column 7, :end-line 100, :end-column 31, :arglists (quote ([cropped-state])), :doc "Replaces a single node in the content, and siblings if necessary."}, :name paren-soup.core/refresh-content-element!, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 31, :method-params ([cropped-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cropped-state])), :doc "Replaces a single node in the content, and siblings if necessary."}, enter! {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 282, :column 4, :end-line 282, :end-column 10, :protocol paren-soup.core/Editor, :doc nil, :arglists (quote ([this]))}, :protocol paren-soup.core/Editor, :name paren-soup.core/enter!, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 10, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 282, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, append-text! {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 281, :column 4, :end-line 281, :end-column 16, :protocol paren-soup.core/Editor, :doc nil, :arglists (quote ([this text]))}, :protocol paren-soup.core/Editor, :name paren-soup.core/append-text!, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 16, :method-params ([this text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 281, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this text])), :doc nil}, line-numbers {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 55, :column 7, :end-line 55, :end-column 19, :arglists (quote ([line-count])), :doc "Adds line numbers to the numbers."}, :name paren-soup.core/line-numbers, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 19, :method-params ([line-count]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([line-count])), :doc "Adds line numbers to the numbers."}, update-highlight! {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 231, :column 7, :end-line 231, :end-column 24, :arglists (quote ([content last-elem]))}, :name paren-soup.core/update-highlight!, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 24, :method-params ([content last-elem]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 231, :end-line 231, :max-fixed-arity 2, :fn-var true, :arglists (quote ([content last-elem]))}, init {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 448, :column 16, :end-line 448, :end-column 20, :export true, :arglists (quote ([paren-soup opts]))}, :name paren-soup.core/init, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 20, :method-params ([paren-soup opts]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 448, :end-line 448, :max-fixed-arity 2, :fn-var true, :arglists (quote ([paren-soup opts]))}, can-undo? {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 277, :column 4, :end-line 277, :end-column 13, :protocol paren-soup.core/Editor, :doc nil, :arglists (quote ([this]))}, :protocol paren-soup.core/Editor, :name paren-soup.core/can-undo?, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 277, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, refresh-content! {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 154, :column 7, :end-line 154, :end-column 23, :arglists (quote ([content state])), :doc "Refreshes the content."}, :name paren-soup.core/refresh-content!, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 23, :method-params ([content state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 154, :end-line 154, :max-fixed-arity 2, :fn-var true, :arglists (quote ([content state])), :doc "Refreshes the content."}, redo {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 506, :column 16, :end-line 506, :end-column 20, :export true, :arglists (quote ([editor]))}, :name paren-soup.core/redo, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 20, :method-params ([editor]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 506, :end-line 506, :max-fixed-arity 1, :fn-var true, :arglists (quote ([editor]))}, debounce-function {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 511, :column 16, :end-line 511, :end-column 33, :export true, :arglists (quote ([f millis]))}, :name paren-soup.core/debounce-function, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 33, :method-params ([f millis]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 511, :end-line 511, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f millis]))}, refresh-instarepl! {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 66, :column 7, :end-line 66, :end-column 25, :arglists (quote ([instarepl content compiler-fn])), :doc "Refreshes the InstaREPL."}, :name paren-soup.core/refresh-instarepl!, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 25, :method-params ([instarepl content compiler-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 3, :fn-var true, :arglists (quote ([instarepl content compiler-fn])), :doc "Refreshes the InstaREPL."}, edit-and-refresh! {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 287, :column 4, :end-line 287, :end-column 21, :protocol paren-soup.core/Editor, :doc nil, :arglists (quote ([this state]))}, :protocol paren-soup.core/Editor, :name paren-soup.core/edit-and-refresh!, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 21, :method-params ([this state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 287, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this state])), :doc nil}, ->t_paren_soup$core12782 {:protocol-inline nil, :meta {:anonymous true, :protocols #{paren-soup.core/Editor cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([clj? refresh-instarepl-with-delay! console-history edit-history paren-soup disable-clj? content append-limit console-callback compiler-fn editor? allow-tab? map__12776 p__12775 last-highlight-elem history-limit events-chan meta12783])), :file nil}, :protocols #{paren-soup.core/Editor cljs.core/IMeta cljs.core/IWithMeta}, :name paren-soup.core/->t_paren_soup$core12782, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :method-params ([clj? refresh-instarepl-with-delay! console-history edit-history paren-soup disable-clj? content append-limit console-callback compiler-fn editor? allow-tab? map__12776 p__12775 last-highlight-elem history-limit events-chan meta12783]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 314, :max-fixed-arity 18, :fn-var true, :arglists (quote ([clj? refresh-instarepl-with-delay! console-history edit-history paren-soup disable-clj? content append-limit console-callback compiler-fn editor? allow-tab? map__12776 p__12775 last-highlight-elem history-limit events-chan meta12783])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, rainbow-count {:meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 35, :column 14, :end-line 35, :end-column 27, :const true}, :name paren-soup.core/rainbow-count, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 27, :const-expr {:op :constant, :env {:context :expr}, :form 5, :tag number}, :column 1, :const true, :line 35, :end-line 35, :tag number}, update-cursor-position! {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 279, :column 4, :end-line 279, :end-column 27, :protocol paren-soup.core/Editor, :doc nil, :arglists (quote ([this position]))}, :protocol paren-soup.core/Editor, :name paren-soup.core/update-cursor-position!, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 27, :method-params ([this position]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 279, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this position])), :doc nil}, init-state {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 207, :column 7, :end-line 207, :end-column 17, :arglists (quote ([content crop? full-selection?])), :doc "Returns the editor's state. If full-selection? is true, it will try to save\nthe entire selection rather than just the cursor position."}, :name paren-soup.core/init-state, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 17, :method-params ([content crop? full-selection?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 207, :end-line 207, :max-fixed-arity 3, :fn-var true, :arglists (quote ([content crop? full-selection?])), :doc "Returns the editor's state. If full-selection? is true, it will try to save\nthe entire selection rather than just the cursor position."}, eval! {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 291, :column 4, :end-line 291, :end-column 9, :protocol paren-soup.core/Editor, :doc nil, :arglists (quote ([this form callback]))}, :protocol paren-soup.core/Editor, :name paren-soup.core/eval!, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 9, :method-params ([this form callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 291, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this form callback])), :doc nil}, add-parinfer-after-console-start {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 176, :column 7, :end-line 176, :end-column 39, :arglists (quote ([console-start-num state]))}, :name paren-soup.core/add-parinfer-after-console-start, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 39, :method-params ([console-start-num state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 2, :fn-var true, :arglists (quote ([console-start-num state]))}, refresh-numbers! {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 61, :column 7, :end-line 61, :end-column 23, :arglists (quote ([numbers line-count])), :doc "Refreshes the line numbers."}, :name paren-soup.core/refresh-numbers!, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 23, :method-params ([numbers line-count]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 2, :fn-var true, :arglists (quote ([numbers line-count])), :doc "Refreshes the line numbers."}, refresh-after-cut-paste! {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 290, :column 4, :end-line 290, :end-column 28, :protocol paren-soup.core/Editor, :doc nil, :arglists (quote ([this]))}, :protocol paren-soup.core/Editor, :name paren-soup.core/refresh-after-cut-paste!, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 28, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 290, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, refresh-after-key-event! {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 289, :column 4, :end-line 289, :end-column 28, :protocol paren-soup.core/Editor, :doc nil, :arglists (quote ([this event]))}, :protocol paren-soup.core/Editor, :name paren-soup.core/refresh-after-key-event!, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 28, :method-params ([this event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 289, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this event])), :doc nil}, add-newline {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 202, :column 7, :end-line 202, :end-column 18, :arglists (quote ([{:keys [text], :as state}]))}, :name paren-soup.core/add-newline, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 18, :method-params ([p__12765]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 202, :end-line 202, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [text], :as state}]))}, update-edit-history! {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 225, :column 7, :end-line 225, :end-column 27, :arglists (quote ([edit-history state]))}, :name paren-soup.core/update-edit-history!, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 27, :method-params ([edit-history state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 225, :end-line 225, :max-fixed-arity 2, :fn-var true, :arglists (quote ([edit-history state]))}, refresh-console-content! {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 167, :column 7, :end-line 167, :end-column 31, :arglists (quote ([content state console-start-num clj?]))}, :name paren-soup.core/refresh-console-content!, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 31, :method-params ([content state console-start-num clj?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 167, :end-line 167, :max-fixed-arity 4, :fn-var true, :arglists (quote ([content state console-start-num clj?]))}, append-text {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 509, :column 16, :end-line 509, :end-column 27, :export true, :arglists (quote ([editor text]))}, :name paren-soup.core/append-text, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 27, :method-params ([editor text]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 509, :end-line 509, :max-fixed-arity 2, :fn-var true, :arglists (quote ([editor text]))}, prevent-default? {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 428, :column 7, :end-line 428, :end-column 23, :arglists (quote ([event opts]))}, :name paren-soup.core/prevent-default?, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 23, :method-params ([event opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 428, :end-line 428, :max-fixed-arity 2, :fn-var true, :arglists (quote ([event opts]))}, initialize! {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 288, :column 4, :end-line 288, :end-column 15, :protocol paren-soup.core/Editor, :doc nil, :arglists (quote ([this]))}, :protocol paren-soup.core/Editor, :name paren-soup.core/initialize!, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 288, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, init-all {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 501, :column 16, :end-line 501, :end-column 24, :export true, :arglists (quote ([]))}, :name paren-soup.core/init-all, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 501, :end-line 501, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-parinfer {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 185, :column 7, :end-line 185, :end-column 19, :arglists (quote ([enable? console-start-num state]))}, :name paren-soup.core/add-parinfer, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 19, :method-params ([enable? console-start-num state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 185, :end-line 185, :max-fixed-arity 3, :fn-var true, :arglists (quote ([enable? console-start-num state]))}, undo {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 505, :column 16, :end-line 505, :end-column 20, :export true, :arglists (quote ([editor]))}, :name paren-soup.core/undo, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 20, :method-params ([editor]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 505, :end-line 505, :max-fixed-arity 1, :fn-var true, :arglists (quote ([editor]))}, t_paren_soup$core12782 {:num-fields 18, :protocols #{paren-soup.core/Editor cljs.core/IMeta cljs.core/IWithMeta}, :name paren-soup.core/t_paren_soup$core12782, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :type true, :anonymous true, :column 5, :line 314, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, down! {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 284, :column 4, :end-line 284, :end-column 9, :protocol paren-soup.core/Editor, :doc nil, :arglists (quote ([this]))}, :protocol paren-soup.core/Editor, :name paren-soup.core/down!, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 9, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 284, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, add-event-listeners! {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 436, :column 7, :end-line 436, :end-column 27, :arglists (quote ([content events-chan opts]))}, :name paren-soup.core/add-event-listeners!, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 27, :method-params ([content events-chan opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 436, :end-line 436, :max-fixed-arity 3, :fn-var true, :arglists (quote ([content events-chan opts]))}, reset-edit-history! {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 280, :column 4, :end-line 280, :end-column 23, :protocol paren-soup.core/Editor, :doc nil, :arglists (quote ([this start]))}, :protocol paren-soup.core/Editor, :name paren-soup.core/reset-edit-history!, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 23, :method-params ([this start]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 280, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this start])), :doc nil}, hide-error-messages! {:protocol-inline nil, :meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 29, :column 7, :end-line 29, :end-column 27, :arglists (quote ([parent-elem])), :doc "Hides all error popups."}, :name paren-soup.core/hide-error-messages!, :variadic false, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 27, :method-params ([parent-elem]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([parent-elem])), :doc "Hides all error popups."}, Editor {:meta {:file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :line 274, :column 14, :end-line 274, :end-column 20, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {can-redo? [[this]], up! [[this]], refresh! [[this state]], undo! [[this]], redo! [[this]], tab! [[this]], enter! [[this]], append-text! [[this text]], can-undo? [[this]], edit-and-refresh! [[this state]], update-cursor-position! [[this position]], eval! [[this form callback]], refresh-after-cut-paste! [[this]], refresh-after-key-event! [[this event]], initialize! [[this]], down! [[this]], reset-edit-history! [[this start]]}}}, :protocol-symbol true, :name paren-soup.core/Editor, :file "/Users/a/.boot/cache/tmp/Users/a/p/paren-soup/2lw/r3nb31/paren_soup/core.cljs", :end-column 20, :column 1, :line 274, :protocol-info {:methods {can-redo? [[this]], up! [[this]], refresh! [[this state]], undo! [[this]], redo! [[this]], tab! [[this]], enter! [[this]], append-text! [[this text]], can-undo? [[this]], edit-and-refresh! [[this state]], update-cursor-position! [[this position]], eval! [[this form callback]], refresh-after-cut-paste! [[this]], refresh-after-key-event! [[this event]], initialize! [[this]], down! [[this]], reset-edit-history! [[this start]]}}, :info nil, :end-line 274, :tag any, :impls #{paren-soup.core/t_paren_soup$core12782}, :doc nil, :jsdoc ("@interface")}}, :cljs.spec/registry-ref [], :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{clj? refresh-instarepl-with-delay! console-history :change-callback :arrows :cropped-state :current-state :element :limit :before-change-callback :else edit-history :cursor-position :states :general :disable-clj? :disable-undo-redo? :return :append-limit :forward :console-callback :compiler-fn :indent-type :undo-or-redo paren-soup :recur disable-clj? meta12783 :normal content append-limit :enter console-callback compiler-fn :paren editor? allow-tab? :back map__12776 :down-arrow :history-limit :both :tab p__12775 :keywordize-keys :up-arrow last-highlight-elem history-limit events-chan :text}, :order [:else :cropped-state :element :cursor-position :text :both :indent-type :paren :history-limit :append-limit :compiler-fn :console-callback :disable-clj? :limit :current-state :states :normal :tab :return :back :forward clj? refresh-instarepl-with-delay! console-history edit-history paren-soup disable-clj? content append-limit console-callback compiler-fn editor? allow-tab? map__12776 p__12775 last-highlight-elem history-limit events-chan meta12783 :undo-or-redo :enter :up-arrow :down-arrow :keywordize-keys :recur :change-callback :arrows :disable-undo-redo? :before-change-callback :general]}, :doc nil}